{"version":3,"sources":["Player.js","RelatedVideo.js","RelatedBar.js","SearchBar.js","youtubeAPI.js","Description.js","Youtube.js","index.js"],"names":["Player","videoId","video","id","className","src","allowFullScreen","title","RelatedVideo","handleVideoSelect","views","formatNumber","statistics","viewCount","duration","parse","contentDetails","minutes","seconds","hours","durationStr","onClick","snippet","thumbnails","medium","url","alt","description","channelTitle","RelatedBar","videos","length","videoItems","map","SearchBar","state","searchString","handleChange","event","value","target","setState","handleKeyDown","keyCode","props","handleSearch","this","name","placeholder","onChange","onKeyDown","Component","axios","create","baseURL","params","key","Description","videoDesc","videoTitle","likes","likeCount","dislikes","dislikeCount","date","format","Date","publishTime","Youtube","playerVideo","number","Math","trunc","getVideos","response","data","items","forEach","he","decode","kind","push","getDetails","idsString","youtubeAPI","get","part","then","item","i","catch","error","console","log","getIdsFromVideos","a","q","tempVideos","details","slice","currentVideo","filter","v","unshift","relatedVideos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21156cb7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Player = ({video}) => {\r\n  let videoId;\r\n  if (video){\r\n    videoId = video.id.videoId;\r\n  } \r\n  \r\n  return (\r\n    <div className=\"player\">\r\n      <iframe\r\n        key={videoId}\r\n        src={`https://www.youtube.com/embed/${videoId}`}\r\n        allowFullScreen\r\n        title=\"EmbeddedVideo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\nimport {parse} from 'iso8601-duration';\r\n\r\nconst RelatedVideo = ({video, handleVideoSelect, formatNumber}) => {\r\n    let views = formatNumber(video.statistics.viewCount) + \" views\";\r\n    let duration = parse(video.contentDetails.duration);\r\n    let minutes = (duration.minutes >= 10)?duration.minutes:\"0\" + duration.minutes;\r\n    let seconds = (duration.seconds >= 10)?duration.seconds:\"0\" + duration.seconds;\r\n    let hours = \"\";\r\n    if (duration.hours > 0){\r\n        hours = (duration.hours >= 10)?duration.hours:\"0\" + duration.hours;\r\n        hours = hours + \":\";\r\n    }\r\n    let durationStr = hours + minutes + \":\" + seconds;\r\n    return (\r\n        <div className=\"related-video\" onClick={ () => handleVideoSelect(video)} >\r\n            <div className=\"thumbnail\">\r\n                <img src={video.snippet.thumbnails.medium.url} alt={video.snippet.description}/>\r\n                <span>{durationStr}</span>\r\n            </div>\r\n            <div className=\"thumbnail-info\">\r\n                <h2>{video.snippet.title}</h2>\r\n                <div className=\"channel\">{video.snippet.channelTitle}</div>\r\n                <div className=\"views\">{views}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default RelatedVideo;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport RelatedVideo from './RelatedVideo';\r\n\r\nconst RelatedBar = ({videos, handleVideoSelect, formatNumber}) => {\r\n\r\n  if (videos.length > 0) {\r\n    let videoItems = videos.map((video) => {\r\n      return (\r\n        <RelatedVideo key={video.id.videoId} video={video} handleVideoSelect={handleVideoSelect} formatNumber={formatNumber} />\r\n      );\r\n    })\r\n    return (\r\n      <div className=\"related\">\r\n        <div className=\"related-title\">\r\n          <p>Related videos</p>\r\n        </div>\r\n        {videoItems}\r\n      </div>\r\n    );\r\n  } else return null;\r\n}\r\n\r\nexport default RelatedBar;","import React, {Component} from 'react';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    searchString: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const {value} = event.target\r\n  \r\n    this.setState({\r\n      \"searchString\": value,\r\n    })\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.keyCode === 13){\r\n      const {value} = event.target\r\n      this.props.handleSearch(value);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { searchString } = this.state;\r\n    const { handleSearch } = this.props;\r\n    return(\r\n      <div className=\"search\">\r\n        <input className=\"search-input\" name=\"search\" placeholder=\"Search\" value={searchString} onChange={this.handleChange} onKeyDown={this.handleKeyDown}></input>\r\n        <img className=\"search-icon\" src=\"images/search.png\" alt=\"Search Icon\" onClick={() =>{handleSearch(searchString)}} />\r\n      </div>\r\n    ) \r\n  }\r\n}\r\n\r\nexport default SearchBar;","import axios from 'axios';\r\nconst KEY = 'AIzaSyDQy795U5vYKa2eHgq4jt4RNlGQL0R8zNk';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3/',\r\n    params: {\r\n        key: KEY\r\n    }\r\n})","import React from 'react';\r\nimport { format } from 'date-format-parse';\r\n\r\nconst Description = ({video, formatNumber}) => {\r\n  if (video){\r\n    let videoDesc = video.snippet.description;\r\n    let videoTitle = video.snippet.title;\r\n    let views = formatNumber(video.statistics.viewCount) + \" views\";\r\n    let likes = formatNumber(video.statistics.likeCount);\r\n    let dislikes = formatNumber(video.statistics.dislikeCount);\r\n    let date = format(new Date(video.snippet.publishTime), 'MMM DD, YYYY');\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"video-info\">\r\n          <p className=\"title\">{videoTitle}</p>\r\n          <div className=\"video-toolbar\">\r\n            <p className=\"video-views\">\r\n              {views} • {date}\r\n            </p>\r\n            <span className=\"right-menu\">\r\n              <div className=\"thumb-wrapper\">\r\n                <a className=\"thumb-up-btn\">\r\n                  <i className=\"material-icons\">thumb_up</i>\r\n                  <span className=\"thumbs-count\">{likes}</span>\r\n                </a>\r\n                <a className=\"thumb-down-btn\">\r\n                  <i className=\"material-icons\">thumb_down</i>\r\n                  <span className=\"thumbs-count\">{dislikes}</span>\r\n                </a>\r\n              </div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"description\">\r\n          <p>{videoDesc}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Description;","import React, {Component} from 'react';\nimport Player from './Player';\nimport RelatedBar from './RelatedBar';\nimport SearchBar from './SearchBar';\nimport youtubeAPI from './youtubeAPI';\nimport Description from './Description';\nimport he from 'he';\n\n\nclass Youtube extends Component {\n\n  state = {\n    videos: [],\n    playerVideo: null\n  };\n\n  formatNumber = (number) => {\n    let res;\n    if (number > 1000000)\n      res = (Math.trunc(number / 100000)) / 10 + \"M\";\n    else if (number > 1000)\n      res = Math.trunc(number / 1000) + \"K\";\n    else res = number;\n    return res;\n  }\n\n  getVideos = (response) => {\n    let videos = [];\n    if (response.data.items){\n      response.data.items.forEach((video) => {\n        video.snippet.title = he.decode(video.snippet.title);   //fixes youtube api's decoding bug in video titles\n        if (video.id.kind === \"youtube#video\")\n          videos.push(video);\n      })\n    }\n    return videos;\n  }\n\n  getDetails = (videos) => {\n    let idsString = \"\";\n    videos.forEach(video => {\n      if (idsString.length === 0)\n        idsString = idsString + video.id.videoId;\n      else \n        idsString = idsString + \",\" + video.id.videoId; \n    });\n    \n    let promiseContentDetails = youtubeAPI.get('/videos', {\n      params: {\n        id: idsString,\n        part: 'contentDetails,statistics'\n      }\n    });\n    return promiseContentDetails.then(response => {\n      let details = response.data.items;\n      details.forEach((item, i) => {\n        // videos and response are in the same order\n        videos[i].contentDetails = item.contentDetails;\n        videos[i].statistics = item.statistics;\n      });\n      return videos;\n    }).catch(error => {\n      console.log(error);\n    })\n  }\n\n  getIdsFromVideos = (videos) => {\n    let idsString = \"\";\n    videos.forEach(video => {\n      if (idsString.length === 0)\n        idsString = idsString + video.id.videoId;\n      else \n        idsString = idsString + \",\" + video.id.videoId; \n    });\n    return idsString;\n  }\n\n  handleSearch = async (searchString) => {\n    if (searchString){\n      youtubeAPI.get('/search', {\n        params: {\n          q: searchString,\n          part: 'snippet',\n        }\n      })\n      .then(response => {\n        let videos = this.getVideos(response);\n        this.setState({\n          tempVideos: videos\n        })\n        console.log(this.state);\n        let idsString = this.getIdsFromVideos(videos);\n        return youtubeAPI.get('/videos', {\n          params: {\n            id: idsString,\n            part: 'contentDetails,statistics'\n          }\n        });\n      })\n      .then(response => {\n        let details = response.data.items;\n        let videos = this.state.tempVideos.slice();\n        details.forEach((item, i) => {\n          // videos and response are in the same order\n          videos[i].contentDetails = item.contentDetails;\n          videos[i].statistics = item.statistics;\n        })\n        this.setState({\n          videos: videos,\n          playerVideo: videos[0]\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      })\n    }\n  }\n\n  handleVideoSelect = (video) => {\n    let currentVideo = this.state.playerVideo;\n    //move currentVideo to videos' last position and new video to first position to keep positions consistent\n    let videos = this.state.videos.filter(v => {\n      return (v.id.videoId !== currentVideo.id.videoId);\n    }).filter(v => {\n      return (v.id.videoId !== video.id.videoId);\n    });\n    videos.unshift(video);\n    videos.push(currentVideo);\n    this.setState({\n      videos: videos,\n      playerVideo: video\n    })\n  }\n\n  render() {\n    const relatedVideos = this.state.videos.slice(1,4);\n    return (\n      <div>\n        <header>\n          <div className=\"header-logo\">\n            <img src=\"images/yt-logo.png\" alt=\"YouTube logo\" className=\"header__yt-logo\"/>\n          </div>\n          <SearchBar handleSearch={this.handleSearch} />\n          <div className=\"right\"></div>\n        </header>\n        <div className=\"main-wrapper\">\n          <div></div>\n          <main>\n            <div className=\"grid1\">\n              <Player video={this.state.playerVideo} />\n              <Description video={this.state.playerVideo} formatNumber={this.formatNumber} />\n            </div>\n            <div className=\"grid2\">\n              <RelatedBar videos={relatedVideos} handleVideoSelect={this.handleVideoSelect} formatNumber={this.formatNumber} />\n            </div>\n          </main>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Youtube\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.css';\nimport Youtube from './Youtube';\n\nReactDOM.render(<Youtube />,document.getElementById('root'));"],"sourceRoot":""}